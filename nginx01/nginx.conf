
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid        /run/nginx.pid;


events {
}


http {
#	auth_basic "Restricted Content";
#	auth_basic_user_file /etc/nginx/.htpassw;

	error_log /var/log/nginx/error.log;
	access_log /var/log/nginx/access.log;
    	include       mime.types;
	fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=microcache:10m max_size=300m;
	fastcgi_cache_key "$scheme$request_method$host$request_uri";
	server_tokens off;

	upstream jenkins {
	keepalive 32; 
	server 192.168.90.6:8080; # jenkins ip and port
	}

server {
  listen 443 ssl;       # Listen on port 80 for IPv4 requests
  server_name    jenkins.romanovs.ml;
  ssl_certificate /etc/letsencrypt/live/jenkins.romanovs.ml/cert.pem;
  ssl_certificate_key /etc/letsencrypt/live/jenkins.romanovs.ml/privkey.pem;

        location /.well-known/acme-challenge/ {
	root /sites/;
    }

  root            /var/run/jenkins/war/;

  ignore_invalid_headers off; #pass through headers from Jenkins which are considered invalid by Nginx server.

  location ~ "^/static/[0-9a-fA-F]{8}\/(.*)$" {
     rewrite "^/static/[0-9a-fA-F]{8}\/(.*)" /$1 last;
  }
    
  location /userContent {
   root /var/lib/jenkins/;
   if (!-f $request_filename){
   rewrite (.*) /$1 last;
   break;
   }
sendfile on;
}
  location / {
      sendfile off;
      proxy_pass http://192.168.90.6:8080;
      proxy_redirect default;
      proxy_http_version 1.1;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_max_temp_file_size 0;

        client_max_body_size 10m;
        client_body_buffer_size 128k;
        proxy_connect_timeout 90;
        proxy_send_timeout 90;
        proxy_read_timeout 90;
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_set_header Connection "";
                                                  }	
	}

 server {
        listen 8018 ssl;
        server_name romanovs.ml;
	ssl_certificate /etc/ssl/crt/web01.crt;
	ssl_certificate_key /etc/ssl/key/web01.key;
	proxy_redirect off;

	location / {
		proxy_pass https://192.168.90.2:8006;
                proxy_set_header Connection $http_connection;
                proxy_set_header Origin http://$host;
                proxy_set_header Upgrade $http_upgrade;
	
	}
	}
 server {
        listen 443 ssl;
        server_name proxmox.romanovs.ml;
	ssl_certificate /etc/letsencrypt/live/proxmox.romanovs.ml/cert.pem;
	ssl_certificate_key /etc/letsencrypt/live/proxmox.romanovs.ml/privkey.pem;
	proxy_redirect off;
	
        location /.well-known/acme-challenge/ {
	root /sites/;
    }

	location / {
		proxy_pass https://192.168.90.2:8006;
                proxy_set_header Connection $http_connection;
                proxy_set_header Origin http://$host;
                proxy_set_header Upgrade $http_upgrade;
	
	}
	}
  
  
 server {
        listen 80;
	rewrite ^ https://$server_name$request_uri? permanent;
        server_name romanovs.ml;
        server_name jenkins.romanovs.ml;
        server_name proxmox.romanovs.ml;
	}
 server { 
	listen 443 ssl;
        server_name romanovs.ml;
	root /sites/;
	
	if ($http_referer ~* badbot) {
		return 405;
	}
	
	ssl_certificate /etc/ssl/crt/web01.crt;
	ssl_certificate_key /etc/ssl/key/web01.key;

	index index.php index.html;
	
	gzip on;
	gzip_min_length 100;
	gzip_comp_level 4;
	gzip_types text/plain;	
	gzip_types text/css;	
	gzip_types text/javascript;	
        gzip_disable "msie6";

	location ~ \.mp4$ {
	    root /mults/;
	    mp4;
	    mp4_buffer_size     1m;
	    mp4_max_buffer_size 5m;
	}

	location ~ \.php$ {
		include fastcgi_params;
        	fastcgi_pass   127.0.0.1:9000;
		include fastcgi.conf;
		fastcgi_cache microcache;
		fastcgi_cache_valid 200 1m;
	}
 }

 server { 
	listen 80;
	server_name gitlab.romanovs.ml;
  	location / {
                proxy_pass http://192.168.90.8;
                proxy_set_header Connection $http_connection;
                proxy_set_header Origin http://$host;
                proxy_set_header Upgrade $http_upgrade;

        	}

	}
}
